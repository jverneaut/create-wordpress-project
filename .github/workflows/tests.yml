# This workflow will run tests using node and then publish
# a package to NPM Packages when a release is created.
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Tests

on:
  push:
    branches:
      - master
      - develop
  pull_request:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/

      - name: Create test project
        run: npm ci && node ./scripts/setup-test.js

      - name: Create archive
        run: tar -zcf __test-project__.tar.gz --directory=./__test-project__ .

      - uses: actions/upload-artifact@v2
        with:
          name: test-project
          path: ./__test-project__.tar.gz

  phpcs:
    name: PHPCS
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: test-project

      - name: Extract archive
        run: tar -xf __test-project__.tar.gz && ls -al

      - name: Determine composer cache directory
        shell: bash
        run: "echo \"COMPOSER_CACHE_DIR=$(composer config cache-dir)\" >> $GITHUB_ENV"

      - uses: php-actions/composer@v5
        with:
          php_version: 7.3
          version: 1

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: PHPCS
        run: composer run phpcs

  phpstan:
    name: PHPStan
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: test-project

      - name: Extract archive
        run: tar -xf __test-project__.tar.gz && ls -al

      - name: Determine composer cache directory
        shell: bash
        run: "echo \"COMPOSER_CACHE_DIR=$(composer config cache-dir)\" >> $GITHUB_ENV"

      - uses: php-actions/composer@v5
        with:
          php_version: 7.3
          version: 1

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: PHPStan
        run: composer run phpstan

  lint:
    name: ESLint & Stylelint
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/

      - uses: actions/download-artifact@v2
        with:
          name: test-project

      - name: Extract archive
        run: tar -xf __test-project__.tar.gz && ls -al

      - run: npm run lint
